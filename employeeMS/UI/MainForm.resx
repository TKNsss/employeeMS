<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADwAAAA8CAYAAAA6/NlyAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        DAAACwwBP0AiyAAACihJREFUaEPNW31QVNcV98/OKAutn2l0igooIOwiLLACu4soyNd+sRCDVZKqUVtR
        oiUYa2CqTvzOilExVrKonWRirGjsNNq0boD4T/+hmWn7Z61tp+0k6TD9SGfaTPvrnPve3ff23bewb9+C
        OTO/Yd9j33n3d8+5555z791Zs6ZJAGQA8ALYCyAMYBzAI4hC9yIAhgH0AXDRs1p9X0qRSVKjiYBZIR3U
        Wd/QvueJi2wVLckJ+V4IwHMAbAAydZ7NBOAG4JO/q9VDQvdc2mdnXHSIEklyTSKQtFvKnkIdQENBLeT+
        Xu33p11kq2iJkivHkMTYbCtGLHsxmhbGiGUcI5ZHGLUgBuxeWgSjlhD77thsa4wO6V0dmvFPHTEzri6P
        KyKoSxSjc1xy4ycEcolC6oSwDnl6FydOfzvU/0+5yGOMC7muhiizlEjADJhnpEWJyRZXu3oo2sBUiTym
        aFohIavujf5vuohqQVZ/+JWoG2s8jdqWGheXe1TtRszNEMnIwMickNCwacecEL07TtvMkY6nEJGMTN0A
        lCD+O2LBw4uL8HbfEvzyzfnC/6eEyto6bUx6diBl3I0VslLkNRyQ/nE/A7dfXYxdvlzY84pRsLyE4fmG
        PPichdhQZsULnjx88NpTwrNxMMGDmoY0tdk4aVWAUsiOzO7QefGk+NfP0nFx31JUFhZFSU6G7Z48Qcek
        GJnNApqGtLFAJs97JBQUFMtqXzYFIv1PobbUJpCKB1t2MZ6pWYXqYhs+urhI0BcXiqWtqkAWDayTiqan
        2EPymDXkxj86uhiFWYrrGkH7+nz8/V6GoHMSTKjGNEXvGGNNKqo5LsyuWTQ2FqCosY5VqwUiiaDKakPP
        phx0P7sCF/YtxZ9vf03QrwtqoxK9KUcgiWj5xYhczpGoxq3xqefm4SUCkWRxYudyQX98zGFjV/ZS7trx
        iw6VK/exa3JlQenU2BNcKTTcKNYUFCG0Zxn+lKiFo5jDCMppaHwry5UPs270nkFX5vA7CwQCyeDwtixB
        99RIYwTl7DC+lVXVjxTmR9IMT0EcLpsSmUuy7QKRRBBwSZ328dACQf/UmMLKss9zkceuZVxUlBhcNmXO
        3VzuRqC4KnpdvrIsphNKckqxWqdTNtfl497pp/HJe0ZdmqBrZSUZUYVyHpltopLEUVdqjTZ865q1+GFr
        C/a7a+HKK4djZRlONjShIrcs+p1O5zoUyp8Ls0pQlFMMd5FN0GsMUSvziM3iEifM3ZmtJmDUEhYVJI4t
        dflRMvuraxlhLa74feiurkVn1Tp2fay+kZEmwo/fnYvf35wn6DUIHrF5bJLcWjY7F2keSzJYcZx/cSkj
        a82y41yzVyAbD1V55ew5g0lHPEyo+Clure0Bs+5MuH/m66zhu52S9XrW1mFTmRvfq9kQQ/B6awu6XOvR
        XurC8fom5v703KfvfVXQmRQiGTbBg1WRTHKBMVqD0nnYAB7fnMsafry+EVcCfpz3eBjBi14vrgYDUcJ0
        fzDgZ58HvF72uTK3HH9417Q7SxizSKmxUgjtVQ9qPn4NZ1Zq/OXGfPTWlDLCpxqbGBki/S2HFLy0ONvk
        QXd1HftMnUFBrbvCgbd2rBJ0G0eaFISlZWKSsNrcbomwueWanxzIQU+FgxE+KRM+7/Fibb4j1p1lS/eu
        r0e73SV1jN/PpqieSgd6nWvwn5+nC/oNYcwyLhOmNXGScbrg6aQ0/46mmwpYD48txcuVEuGjGxoVSzY3
        xxAe9Etufj3YggteKbC97vGwSH2oyoEjNWX434hJwqMWljWq8oxHdMGEhWzJpbUPGcJfh+eh1yURPrgu
        Nkip8abfy4KW+t7JhmZYs0qYdd/emS/oTgZRXpxnqgkTfj2wGKW5xSwCa4lyXPY2Rd2a45X1G2BfUYL7
        B3Pw+fvJZFgiZoQwgXJhSiuJyIDPi9ZiF5tnnXnlWFewBjWr1sCd74Azvxw7KmrY93ZW1KDFXSDoMoMZ
        I9zVthLOPAeuBQNsjuWZlx4qcsuZtVtLnDjwzRxBlxnoEU5p0OI4sWs5C0CUN/c3exgxh82NE0fP4OY7
        w7h14zYuvf4Ddo8IDwUDsK8oxYUXlwm6TEA3aPGlWCkrMVElqfH+6acZyQZrBUsqbFlSRVSYZUegYSO8
        da0oK3Cye+Ta369tYJ8/PJfwMu3UGEvnVZOSTarWsKQ62GThwPFFJB1OuUxMpCYuzrbDnrcan95NTbCS
        wQsIvnQ1TBe8NExZasnRv2eZQGwy7A6sFHSYgpha9qnZp6x44PjnTzMSXt+qKCzC727MFXSYglg8uOmC
        l4dUQknlIa3zah9OEv9+kI4jW7NRlK2/Rk2BrX1tIf54K6WuTOABSyh/1T0grRKYLCD0EAoWYWdZOTpK
        ytBmK8Wzqx3odq/H2aZmfHzK7OqGHqKFQ4wHc8K8RByWCLNdfB0lyeGz4Xk4vNaBPmcFDldXob++FkMt
        UllIuNdZIzxjGoo786CsbL3ou7W5qkmNX7xqxRueJoQDPiGdJLy10Y9P3lkiPJc0lCpJWJxUk+ZuLS3C
        p8DKf/tgIcbP2hghLUktLm1tw2B/Iz67n4J5+CPpiIRqU1BcjFdNzqas/PmDeYhcK8WOlzqxpGUQy3yX
        0ervxaGWXegPbsbl4EYMtj6DgWA7zgQ78ELgu6j0n8Yi7xAWeK9iScsV7D74bUSu2fHFh0mtbSkbCUoW
        yWp9QcxY+Vc3c/HK4Q5ktV1iDU8F8tvPo7t3G35za4XwvrhQdhF5XIp2gCD6Vo4fsalAf3CtFC27DwqN
        TTWCe17GyPUSoQ0aqDfTuHUnP8imsrIUsWm7dFRctv3tnWXYsn8/FsquOBNY6BtCx/59ePzjTC1Rgnq7
        NGbLd1LRbDUqG+KqZOTOFScyg5eFBs0UstoGMHiuUU1Wb0M88VM9ml106TiBfOQhdDIoNOBJYbC/SSIc
        e7iFG8vYKT39Qy1pHb7vHBJe/KTg231IPQUlf6iFRE5GhGNLdwerrfYtr01oXz7TWLf9yMTdwUrdY0ta
        LgmLTJorUiwdycjcdaDzkbYRM4WdPZ2THUxLbNzGk3gKKSJue6krVLw5JDRoukBzfP2OPvXRQzqmJLTN
        tMikdQ+XLvKFMzd29Uy7tauePx45dWxjNGPSOVxq/PTdVKI5PhxzSPvOFWdH466+cW1DzWKh91pkkS+s
        JkrDjO+HkVCbUk+Wi+Z0Ov1VdtZnzZr1XHeXrWDTufAC79WkrZ7dNjBh23Q2NHa9REuU0kVu1RhPm1aR
        XVx9SJuIU0fEjCEiX7bl9N75nqEQWWqhphNoTMr3xgvaz4Xpu9u7u1gdy0WHKAllg6kZr0ZEXk3g1uZC
        HUH3k3YzmSTl9eS6WqL6lc9Mivwrlng/v6ExRh1ABASr0D052pKH8J/xqElyPU+eqFZkV6foqUfeqJAO
        4ZcyX1qR3ZIsT40m1yQCWvcnoXs0rdBQoM6i3ytNG8n/A22jnbUcfVEOAAAAAElFTkSuQmCC
</value>
  </data>
</root>